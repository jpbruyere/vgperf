CMAKE_MINIMUM_REQUIRED(VERSION 3.9)

PROJECT(vgperf VERSION 0.1.0 DESCRIPTION "Vector Graphic Libraries performance tests")

SET(CMAKE_MODULE_PATH ${CMAKE_MODULE_PATH} "${CMAKE_CURRENT_SOURCE_DIR}/cmake")
SET(CMAKE_CXX_FLAGS "-W -Wall")
SET(CMAKE_EXE_LINKER_FLAGS "-lm")

IF(NOT CMAKE_BUILD_TYPE)
  SET(CMAKE_BUILD_TYPE Debug)
ENDIF()
MESSAGE(STATUS "${CMAKE_BUILD_TYPE} build.")

IF (CMAKE_BUILD_TYPE STREQUAL "Debug")
	ADD_DEFINITIONS (-DDEBUG)
ENDIF()

OPTION(TESTS_VKVG "build vkvg tests" ON)
OPTION(TESTS_CAIRO "build cairo tests" ON)

FILE(GLOB SOURCES src/*.c)

SET(VGPERF_LIBS "")
SET(VGPERF_INCS "")

LIST(APPEND VGPERF_INCS
	${CMAKE_CURRENT_SOURCE_DIR}/src
	${CMAKE_CURRENT_SOURCE_DIR}/external/vkh/src
)

IF (TESTS_VKVG)
	set(VULKAN_SDK "$ENV{VULKAN_SDK}" CACHE STRING "LunarG Vulkan SDK path")
	if (VULKAN_SDK)
			set(ENV{VULKAN_SDK} ${VULKAN_SDK})
			SET(ENV{VK_LAYER_PATH} "${VULKAN_SDK}/etc/explicit_layer.d")
	endif ()

	MESSAGE(STATUS "VULKAN_SDK = $ENV{VULKAN_SDK}")
	MESSAGE(STATUS "VK_LAYER_PATH = $ENV{VK_LAYER_PATH}")

	add_subdirectory (external/vkh)

	#be aware that system libraries have priority on SDK in the finding.
	FIND_PACKAGE(Vulkan REQUIRED)

	SET(VKVG_INCLUDE_DIRECTORY "/usr/local/include/vkvg" CACHE STRING "VKVG include directory")
	SET(VKVG_LIBRARY "/usr/local/lib/libvkvg.so" CACHE STRING "VKVG include directory")
	FILE (GLOB VKVG_SOURCES src/vkvg/*.c)

	LIST (APPEND SOURCES
		${VKVG_SOURCES}
	)
	LIST(APPEND VGPERF_INCS
		${Vulkan_INCLUDE_DIRS}
		${VKVG_INCLUDE_DIRECTORY}
	)
	LIST(APPEND VGPERF_LIBS
		${Vulkan_LIBRARIES}
		vkh_static
		${VKVG_LIBRARY}
	)

	ADD_DEFINITIONS (-DWITH_VKVG)
ENDIF ()

INCLUDE(CheckIncludeFiles)

if (TESTS_CAIRO)
	SET(CAIRO_INCLUDE_DIRECTORY "/usr/include/cairo" CACHE STRING "CAIRO include directory")
	SET(CAIRO_LIBRARY "/usr/lib/x86_64-linux-gnu/libcairo.so" CACHE STRING "CAIRO include directory")
	FILE (GLOB CAIRO_SOURCES src/cairo/*.c)

	LIST (APPEND SOURCES
		${CAIRO_SOURCES}
	)
	LIST(APPEND VGPERF_INCS
		${CAIRO_INCLUDE_DIRECTORY}
	)
	LIST(APPEND VGPERF_LIBS
		${CAIRO_LIBRARY}
	)

	ADD_DEFINITIONS (-DWITH_CAIRO)

	CHECK_INCLUDE_FILES(cairo/cairo-gl.h HAVE_CAIRO_GL_H)

	MESSAGE(STATUS "cairo-gl   = ${HAVE_CAIRO_GL_H}")

	CHECK_INCLUDE_FILES(cairo/cairo-xlib.h HAVE_CAIRO_XLIB_H)
	FIND_PACKAGE (X11)
	IF (X11_FOUND AND HAVE_CAIRO_XLIB_H)
		LIST(APPEND VGPERF_INCS
			${X11_INCLUDE_DIR}
		)
		LIST(APPEND VGPERF_LIBS
			${X11_LIBRARIES}
		)
		ADD_DEFINITIONS (-DWITH_CAIRO_X11)
	ENDIF ()
	#CHECK_SYMBOL_EXISTS (CAIRO_HAS_XCB_SURFACE "${CAIRO_INCLUDE_DIRECTORY}/cairo.h" CAIRO_HAS_XCB)
endif()

FIND_PACKAGE(GLFW3)

IF(GLFW3_FOUND)
	LIST(APPEND VGPERF_LIBS
		${GLFW3_LIBRARY}
	)
	ADD_DEFINITIONS (-DWITH_GLFW3)
ENDIF()



ADD_EXECUTABLE(${PROJECT_NAME} ${SOURCES})

TARGET_INCLUDE_DIRECTORIES(${PROJECT_NAME} PRIVATE ${VGPERF_INCS})
TARGET_LINK_LIBRARIES(${PROJECT_NAME} ${VGPERF_LIBS})

